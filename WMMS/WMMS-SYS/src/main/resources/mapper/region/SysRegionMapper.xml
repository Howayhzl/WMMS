<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncms.mapper.region.SysRegionMapper">
	<resultMap id="BaseResultMap" type="com.ncms.model.sys.region.SysRegion">
		<id column="reg_id" property="regId" jdbcType="VARCHAR"/>
		<result column="reg_code" property="regCode" jdbcType="VARCHAR"/>
		<result column="reg_name" property="regName" jdbcType="VARCHAR"/>
		<result column="reg_note" property="regNote" jdbcType="VARCHAR"/>
		<result column="preg_id" property="pregId" jdbcType="VARCHAR"/>
		<result column="reg_state" property="regState" jdbcType="INTEGER"/>
		<result column="reg_order" property="regOrder" jdbcType="INTEGER"/>
	</resultMap>
	
	<resultMap id="BaseResultMap_AllRegion" type="com.ncms.model.region.SysRegionVO">
		<id column="reg_id" property="regId" jdbcType="VARCHAR"/>
		<result column="reg_code" property="regCode" jdbcType="VARCHAR"/>
		<result column="reg_name" property="regName" jdbcType="VARCHAR"/>
		<result column="reg_note" property="regNote" jdbcType="VARCHAR"/>
		<result column="preg_id" property="pregId" jdbcType="VARCHAR"/>
		<result column="reg_state" property="regState" jdbcType="INTEGER"/>
		<result column="reg_order" property="regOrder" jdbcType="INTEGER"/>
	</resultMap>
	
	<sql id="Base_Column_List">
		sys_region.reg_id,sys_region.reg_code,sys_region.reg_name,sys_region.reg_note,sys_region.preg_id,sys_region.reg_state,sys_region.reg_order
	</sql>
	
	<select id="queryByConditions" parameterType="Map" resultType="map">
	SELECT
		reg.reg_id as regId,
		reg.reg_code as rCode,
		reg.reg_name as rName,
		reg.reg_note as regNote,
		reg.preg_id as pRegId,
		reg.reg_state as regState,
		reg.reg_order as regOrder,
		preg.reg_name AS pRegName
	FROM
		sys_region reg
	LEFT JOIN sys_region preg
	on reg.preg_id = preg.reg_id
	WHERE 
		reg.reg_state &gt;= 0
  		<if test="regCode!='' and regCode!=null">
  		and LOCATE(#{regCode,jdbcType=VARCHAR},reg.reg_code) &gt; 0
  		</if>
  		<if test="regName!='' and regName!=null">
  		and LOCATE(#{regName,jdbcType=VARCHAR},reg.reg_name) &gt; 0
  		</if>
  </select>
	
	<select id="queryRegionByConditions" parameterType="map" resultType="map">
	SELECT
		reg.reg_id as regId,
		reg.reg_code as rCode,
		reg.reg_name as rName,
		reg.reg_order as regOrder,
		reg.reg_note as regNote,
		reg.reg_state as regState,
		reg.preg_id as pRegId,
		preg.reg_name AS pRegName
	FROM
	sys_region reg 
	LEFT JOIN sys_region preg
	on reg.preg_id = preg.reg_id
	WHERE 
	reg.reg_state &gt;= 0
  </select>
  
	
  	<!-- 逻辑删除 -->
  	<update id="updateRegionState" parameterType="Map">
		update sys_region s set s.reg_state=#{state}
	    <where>
	        s.reg_id in  
	        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
                #{item}  
            </foreach>  
    	</where>
	</update>
	
	<select id="queryAllRegion" parameterType="map" resultMap="BaseResultMap_AllRegion">
	<!-- 查询所有区县信息 -->
	SELECT
		reg.reg_id,reg.reg_code,reg.reg_name,reg.reg_note,reg.preg_id,reg.reg_state,reg.reg_order
	FROM
	sys_region reg 
	LEFT JOIN sys_region preg
	on reg.preg_id = preg.reg_id
	<where>
		<if test="state == null">
	  		and reg.reg_state &gt;= 0
	  	</if>
	  	<if test="state != null">
	  		and reg.reg_state = #{state}
	  	</if>
  	</where>
  </select>
  
  <insert id="insertUserRegion" parameterType="Map" >
  <!-- 新增用户区县关系 yuefy  -->
    insert into sys_userregion (user_id, reg_id)
    values 
    <foreach collection="insertUserRegionList" item="insert" index="index" separator=",">
	    (
	    #{insert.userId,jdbcType=VARCHAR}, 
	    #{insert.regId,jdbcType=VARCHAR}
	    )
    </foreach>
  </insert>
  
  <select id="queryOnePro" parameterType="Map" resultType="com.ncms.model.region.SysProvinceTreeVO">
  <!-- 查询用户管理区县树  -->
  	select 
	    p.reg_id as id,
		p.reg_code as code,
		p.reg_name as name,
		p.preg_id as pId
	from 
		sys_region p
	where 
		p.preg_id  = ''
	AND p.reg_state = 0
	
	UNION
	select 
	    p.reg_id as id,
		p.reg_code as code,
		p.reg_name as name,
		p.preg_id as pId
	from 
		sys_region p
	join sys_region p1 on p.preg_id = p1.reg_id
	where 
		p.reg_state = #{regState,jdbcType=INTEGER} 
	and
	    p1.reg_state = #{regState,jdbcType=INTEGER}
  </select>
  
	<select id="queryRegionId" parameterType="Map" resultType="java.lang.String">
		<!-- 根据用户id查询所管理区县id -->
		select reg_id from sys_userregion where user_id = #{userId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectSysRegionLikeRegId" parameterType="Map" resultMap="BaseResultMap">
		<!-- 根据区县id前缀查询 所属省份id 及 code  yuefy -->
		select
		<include refid="Base_Column_List"></include>
		from sys_region 
		where
		LOCATE(#{likeRegId,jdbcType=VARCHAR},reg_id) &gt; 0
		and preg_id = ''
	</select>
  
</mapper>